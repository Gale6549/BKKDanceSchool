package application;

import javafx.fxml.FXML;

import javafx.scene.control.Button;
import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;

import java.net.URL;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ResourceBundle;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;

import javafx.scene.control.TableView;

import javafx.scene.control.TableColumn;

public class MainsenceBKKDanceSchoolController2 {
	@FXML
	private TextField tfID;
	@FXML
	private TextField tfName;
	@FXML
	private TextField tfLastname;
	@FXML
	private TextField tfEmail;
	@FXML
	private TextField tfYear;
	@FXML
	private TextField tfProgram;
	@FXML
	private TableView<Students> tvStudents;
	@FXML
	private TableColumn<Students,Integer> clmID;
	@FXML
	private TableColumn<Students,String> clmName;
	@FXML
	private TableColumn<Students,String> clmLastname;
	@FXML
	private TableColumn<Students,String> clmEmail;
	@FXML
	private TableColumn<Students,Integer> clmYear;
	@FXML
	private TableColumn <Students,String> clmProgram;
	@FXML
	private Button btnInsert;
	@FXML
	private Button btnUpdate;
	@FXML
	private Button btnDelete;
	

	// Event Listener on Button[#btnInsert].onAction
		@FXML
		public void handleButtonAction1(ActionEvent event) {
			// TODO Autogenerated
			insertRecord();
		}
		// Event Listener on Button[#btnUpdate].onAction
		@FXML
		public void handleButtonAction2(ActionEvent event) {
			// TODO Autogenerated
			updateRecord();
		}
		// Event Listener on Button[#btnDelete].onAction
		@FXML
		public void handleButtonAction3(ActionEvent event) {
			// TODO Autogenerated
			deleteButton() ;
		}


	
	public void initialize(URL url, ResourceBundle rb) {
		//TODO
	}
	public Connection getConnection() {
	Connection conn;
	try {
		conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/students","root","1234");
		return conn;
	}catch(Exception ex) {
		System.out.println("Error:"+ex.getMessage());
		return null;
	}
	}
	
	public ObservableList<Students> getStudentsList(){
		 ObservableList<Students> studentsList= FXCollections.observableArrayList();
		 Connection conn=getConnection();
		 String query= "SELECT*FROM students";
		 Statement st;
		 ResultSet rs;
		 try {
			 st=conn.createStatement();
			 rs=st.executeQuery(query);
			 Students students;
			 while(rs.next()) {
				 students=new Students(rs.getInt("idStudents"),rs.getString("Name"),rs.getString("LastName"),rs.getString("Email"),rs.getInt("Year"),rs.getString("Program"));
				 studentsList.add(students);
			 }
		 }catch(Exception ex) {
			 ex.printStackTrace();
		 }
		 
		return studentsList;
		 
	}
	
	public void showStudents() {
	ObservableList<Students> list=getStudentsList();
//	private TableColumn<Students,Integer> clmID;
//	@FXML
//	private TableColumn<Students,String> clmName;
//	@FXML
//	private TableColumn<Students,String> clmLastname;
//	@FXML
//	private TableColumn<Students,String> clmEmail;
//	@FXML
//	private TableColumn<Students,Integer> clmYear;
//	@FXML
//	private TableColumn <Students,String>clmProgram;
	clmID.setCellValueFactory(new PropertyValueFactory<Students,Integer>("idStudents"));
	clmName.setCellValueFactory(new PropertyValueFactory<Students,String>("Name"));
	clmLastname.setCellValueFactory(new PropertyValueFactory<Students,String>("LastName"));
	clmEmail.setCellValueFactory(new PropertyValueFactory<Students,String>("Email"));
	clmYear.setCellValueFactory(new PropertyValueFactory<Students,Integer>("Year"));
	clmProgram.setCellValueFactory(new PropertyValueFactory<Students,String>("Program"));

	tvStudents.setItems(list);
	
	}
	private void insertRecord() {
		String query="INSERT INTO students VALUES("+tfID.getText()+",'"+tfName.getText()+"','"+tfLastname.getText()+"','"
+tfEmail.getText()+"',"+tfYear.getText()+",'"+tfProgram.getText()+"')";	
		executeQuery(query);
		showStudents();
	}
private void updateRecord() {
	String query="UPDATE students SET name='"+tfName.getText()+"',lastname='"+tfLastname.getText()+"',email='"+tfEmail.getText()+"',year="+tfYear.getText()+",program='"+tfProgram.getText()+"' WHERE idStudents="+tfID.getText()+"";
	executeQuery(query);
	showStudents();
}

private void deleteButton() {
	String query= "DELETE FROM students WHERE idStudents="+tfID.getText()+"";
	executeQuery(query);
	showStudents();
}
	private void executeQuery(String query) {
		// TODO Auto-generated method stub
		Connection conn=getConnection();
		Statement st;
		try {
			st=conn.createStatement();
			st.executeUpdate(query);
		}catch(Exception ex) {
			ex.printStackTrace();
	}
				
				
	}
	
	
}

